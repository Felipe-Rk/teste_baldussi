üìñ Guia de Testes para a API de Transcri√ß√£o (User)
Este guia detalha como utilizar a cole√ß√£o configurada no Postman para testar os endpoints dispon√≠veis para usu√°rios com perfil de User na API de Transcri√ß√£o. Os scripts j√° est√£o automatizados para gera√ß√£o de dados, autentica√ß√£o e execu√ß√£o de testes, tornando o processo simples e eficiente.

üõ†Ô∏è Pr√©-Requisitos
Instalar o Postman:

Certifique-se de que o Postman est√° instalado. Caso contr√°rio, fa√ßa o download em Postman.

Cole√ß√£o de Testes:

Importe a cole√ß√£o Api transcri√ß√£o - Teste(user).postman_collection.json no Postman:

Abra o Postman.

Clique em "Import" no canto superior esquerdo.

Arraste ou carregue o arquivo .json.

Configura√ß√£o do Ambiente:

Certifique-se de que a API est√° rodando localmente na porta 5000. Caso esteja rodando em outra porta ou endere√ßo, atualize a URL na cole√ß√£o.

üìå Estrutura da Cole√ß√£o
A cole√ß√£o de testes para User cont√©m os seguintes endpoints:

Registrar User: Cria um usu√°rio com dados predefinidos.

Logar User: Realiza login e gera um token JWT.

Consultar Todos os Usu√°rios: Lista todos os usu√°rios dispon√≠veis (limitado pelo papel de usu√°rio).

Consultar Usu√°rio por ID: Retorna informa√ß√µes detalhadas de um usu√°rio.

Consultar Todas as Transcri√ß√µes: Lista todas as transcri√ß√µes dispon√≠veis para o usu√°rio.

üöÄ Passo-a-Passo para Testar
1. Registrar User
Abra a requisi√ß√£o Registrar User na cole√ß√£o.

Clique em Send.

O que acontece:

O corpo da requisi√ß√£o j√° est√° configurado para registrar um usu√°rio com dados fixos:

json
{
  "cpf": "545645454",
  "nome": "user",
  "email": "user@example.com",
  "senha": "senha123",
  "role": "user"
}
Resultado esperado:

Status 201 (Usu√°rio criado com sucesso) ou 409 (E-mail j√° cadastrado).

Uma mensagem de confirma√ß√£o ser√° exibida no corpo da resposta:

json
{
  "message": "Usu√°rio criado com sucesso."
}
2. Logar User
Abra a requisi√ß√£o Logar User.

Clique em Send.

O que acontece:

O e-mail e a senha configurados no passo anterior s√£o utilizados para autenticar o usu√°rio.

O token JWT gerado ser√° salvo automaticamente na vari√°vel global {{token}} por meio do script configurado.

Resultado esperado:

Status 200.

O token JWT ser√° retornado no corpo da resposta:

json
{
  "token": "eyJhbGciOiJIUzI1..."
}
3. Consultar Todos os Usu√°rios
Abra a requisi√ß√£o Consultar Users All - User.

Clique em Send.

O que acontece:

A requisi√ß√£o utiliza o token JWT salvo para autenticar a a√ß√£o.

Resultado esperado:

Status 200.

Lista de usu√°rios ser√° retornada:

json
[
  {
    "id": 1,
    "nome": "User 1",
    "email": "user1@example.com",
    "role": "user"
  },
  ...
]
4. Consultar Usu√°rio por ID
Abra a requisi√ß√£o Consultar User ID - User.

Substitua <id> no URL pelo ID de um usu√°rio existente (ex.: /users/1).

Clique em Send.

Resultado esperado:

Status 200.

Detalhes do usu√°rio ser√£o exibidos:

json
{
  "id": 1,
  "nome": "User 1",
  "email": "user1@example.com",
  "role": "user"
}
5. Consultar Todas as Transcri√ß√µes
Abra a requisi√ß√£o Consultar Todas Transcri√ß√µes - User.

Clique em Send.

O que acontece:

A requisi√ß√£o utiliza o token JWT salvo para acessar a lista de transcri√ß√µes dispon√≠veis para o usu√°rio.

Resultado esperado:

Status 200.

Lista de transcri√ß√µes ser√° retornada:

json
[
  {
    "id": "67e128e73042ea78cacbda69",
    "transcription": "Texto da transcri√ß√£o...",
    "status": "pendente",
    "user_id": "1"
  },
  ...
]
üí° Dicas Importantes
Token JWT:

O token gerado no login √© armazenado automaticamente na vari√°vel global {{token}}. Certifique-se de que ele foi gerado corretamente.

IDs Din√¢micos:

Atualize os IDs nas requisi√ß√µes de acordo com os dados dispon√≠veis no seu banco de dados.

Ambiente Configurado:

Verifique se o endere√ßo da API est√° correto (por padr√£o, http://localhost:5000).