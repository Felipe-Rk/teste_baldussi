Documentação de Testes da API de Transcrição
Introdução
Este documento tem como objetivo guiar o usuário na execução dos testes definidos no arquivo exportado do Postman. Ele cobre a sequência necessária para testar funcionalidades como registro, login, consulta, transcrição e outros.

O arquivo exportado está devidamente configurado, bastando adicionar os tokens e definir os IDs necessários para a execução dos testes.

Pré-requisitos
Tenha o Postman instalado em sua máquina. Você pode baixá-lo em https://www.postman.com/downloads/.

Certifique-se de que a API esteja rodando localmente no http://localhost:5000.

Importar o arquivo JSON exportado do Postman:

Abra o Postman.

Clique em Import no canto superior esquerdo.

Selecione o arquivo Api transcrição - Teste.postman_collection.json e clique em Importar.

Configuração Inicial
Adicione o token de autenticação nas requisições que demandam autorização:

No Postman, localize as requisições que utilizam o cabeçalho Authorization.

Substitua <token> pelo token gerado após o login.

O token pode ser obtido ao executar a requisição de login (/auth/login).

Defina os IDs nas rotas que exigem um identificador específico:

Substitua <id_transcription> ou <user_id> pelos valores corretos conforme os dados do seu banco.

Sequência de Testes
1. Registrar Usuários
Endpoint: POST /auth/register

Requisição:

Para registrar um usuário comum:

json
{
  "cpf": "545645454",
  "nome": "user",
  "email": "user@example.com",
  "senha": "senha123",
  "role": "user"
}
Para registrar um administrador:

json
{
  "cpf": "545645454",
  "nome": "admin",
  "email": "admin@example.com",
  "senha": "senha123",
  "role": "admin"
}
Execute ambas as requisições para criar um usuário e um administrador.

2. Logar Usuários
Endpoint: POST /auth/login

Requisição:

Para login de usuário comum:

json
{
  "email": "user@example.com",
  "password": "senha123"
}
Para login de administrador:

json
{
  "email": "admin@example.com",
  "password": "senha123"
}
Após o login, copie o token JWT retornado e utilize-o no cabeçalho Authorization nas requisições subsequentes:

Authorization: Bearer <token>
3. Consultar Usuários (Apenas Administrador)
Endpoint: GET /users

Descrição: Retorna a lista de todos os usuários registrados.

Token necessário: Utilize o token gerado no login do administrador.

4. Atualizar Usuário
Endpoint: PUT /users/<user_id>

Exemplo de Requisição:

json
{
  "nome": "user alterado",
  "email": "user.alterado@example.com"
}
Substitua <user_id> pelo ID do usuário que deseja atualizar.

5. Deletar Usuário
Endpoint: DELETE /users/<user_id>

Descrição: Remove o usuário especificado.

Substitua <user_id> pelo ID do usuário a ser deletado.

6. Realizar Transcrição
Endpoint: POST /transcriptions/transcribe

Requisição:

Envie o arquivo de áudio no corpo da requisição como form-data.
//arquivos no diretorio src/teste
Adicione o campo file com o arquivo desejado.

7. Consultar Transcrições
Consultar todas as transcrições (admin):

Endpoint: GET /transcriptions/

Consultar transcrição específica:

Endpoint: GET /transcriptions/<id_transcription>

Substitua <id_transcription> pelo ID da transcrição.

8. Atualizar Transcrição (Admin)
Endpoint: PUT /transcriptions/<id_transcription>

Exemplo de Requisição:

json
{
  "transcription": "Texto atualizado transcrição.",
  "status": "revisado"
}
Substitua <id_transcription> pelo ID da transcrição que deseja atualizar.

9. Deletar Transcrição (Admin)
Endpoint: DELETE /transcriptions/<id_transcription>

Substitua <id_transcription> pelo ID da transcrição que deseja deletar.

Dicas
Utilize as variáveis globais no Postman para armazenar valores como URL da API, tokens e IDs. Isso facilita a reutilização dos valores em diferentes requisições.

Caso encontre erros, confira o log da API e o Postman para mais detalhes.

Certifique-se de que o banco de dados está populado com dados iniciais (se necessário).