README do Projeto "API de Transcrição"

API de Transcrição
Esta é uma API construída para realizar transcrições de arquivos de áudio. O sistema integra funcionalidades de autenticação, classificação de transcrições, e manipulação de dados utilizando bancos de dados MySQL e MongoDB, além de integrar a API da OpenAI para processamento de transcrições.

Índice
Funcionalidades

Tecnologias Utilizadas

Pré-requisitos

Configuração

Uso

Estrutura do Projeto

Endpoints

Contribuição

Licença

Funcionalidades
Registro e autenticação de usuários com JWT.

Upload de arquivos de áudio para transcrição.

Classificação das transcrições por categorias pré-definidas.

Consultar, atualizar e deletar transcrições.

Integração com MySQL para gerenciar usuários.

Integração com MongoDB para armazenamento e consulta de transcrições.

Suporte a múltiplos formatos de áudio, incluindo mp3, ogg, wav, entre outros.

Tecnologias Utilizadas
Linguagem: Python.

Framework Backend: Flask.

Banco de Dados Relacional: MySQL.

Banco de Dados Não-Relacional: MongoDB.

Autenticação: Flask-JWT-Extended.

API de Transcrição: OpenAI (Modelo Whisper-1).

Gerenciamento de Dependências: pip e dotenv.

Pré-requisitos
Certifique-se de ter as seguintes ferramentas instaladas em sua máquina:

Python 3.10 ou superior.

MySQL Server.

MongoDB.

Conta na OpenAI para utilizar a API.

Editor de código (recomendado: VSCode).

Configuração
1. Clonar o Repositório
bash
git clone https://github.com/usuario/api_transcricao.git
cd api_transcricao
2. Configurar Ambiente Virtual
bash
python3 -m venv venv
source venv/bin/activate # Linux/Mac
venv\Scripts\activate # Windows
3. Instalar Dependências
bash
pip install -r requirements.txt
4. Configurar Variáveis de Ambiente
Crie e Edite o arquivo .env com suas chaves e configurações:

OPENAI_API_KEY=sk-CHAVE_UNICA
JWT_SECRET_KEY=sua_chave_secreta
5. Configurar Bancos de Dados
MySQL:

Certifique-se de que o banco user_db está configurado.

As tabelas necessárias serão criadas automaticamente.

MongoDB:

O banco de dados transcricao_db será configurado automaticamente ao iniciar a aplicação.

6. Executar o Servidor
bash
python src/main.py
Uso
Faça login ou registre-se utilizando os endpoints /auth/login ou /auth/register.

Envie arquivos para transcrição utilizando /transcriptions/transcribe.

Consulte transcrições realizadas em /transcriptions.

Utilize as rotas administrativas para gerenciar usuários ou transcrições.

Estrutura do Projeto
plaintext
src/
├── auth/
│   ├── auth_controller.py
│   ├── auth_endpoint.py
│   └── auth_service.py
├── database/
│   ├── mongo/
│   │   ├── mongo.py
│   │   └── mongo_config.py
│   ├── mysql/
│       ├── mysql.py
│       └── mysql_config.py
├── openai/
│   ├── openai_config.py
│   └── openai_service.py
├── transcription/
│   ├── transc_controller.py
│   ├── transc_endpoint.py
│   ├── transc_entity.py
│   └── transc_service.py
├── user/
│   ├── user_controller.py
│   ├── user_endpoint.py
│   ├── user_entity.py
│   └── user_service.py
├── utils/
│   └── permissions.py
└── main.py
Endpoints
Autenticação
POST /auth/login: Autenticação de usuários.

POST /auth/register: Registro de novos usuários.

Transcrições
POST /transcriptions/transcribe: Enviar arquivo de áudio para transcrição.

GET /transcriptions: Listar transcrições.

GET /transcriptions/<transcription_id>: Detalhar uma transcrição específica.

PUT /transcriptions/<transcription_id>: Atualizar uma transcrição (apenas admins).

DELETE /transcriptions/<transcription_id>: Remover uma transcrição (apenas admins).

GET /transcriptions/search: Pesquisar transcrições por palavra-chave ou classificação.

Usuários (Apenas Admins)
GET /users: Listar todos os usuários.

GET /users/<user_id>: Detalhar um usuário específico.

PUT /users/<user_id>: Atualizar um usuário.

DELETE /users/<user_id>: Deletar um usuário.

Contribuição
Contribuições são bem-vindas! Siga as etapas abaixo para colaborar:

Faça um fork do repositório.

Crie uma branch para sua feature (git checkout -b minha-feature).

Commit suas mudanças (git commit -m 'Minha nova feature').

Faça um push para a branch criada (git push origin minha-feature).

Crie um Pull Request.

Licença
Este projeto está licenciado sob a Licença MIT. Para mais detalhes, consulte o arquivo LICENSE.

Se precisar de mais alguma informação ou um ajuste, é só avisar! 😊